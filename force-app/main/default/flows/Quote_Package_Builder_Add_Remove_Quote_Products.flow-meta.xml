<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>61.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Assign_Create_Error_Message</name>
        <label>Assign Create Error Message</label>
        <locationX>2778</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>VarErrorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CerateErrorMessageTemplate</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_Daily</name>
        <label>Assign Daily</label>
        <locationX>1370</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Entry_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarEntryDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarQuantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.TotalPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarPrice</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_New_Quote_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Daily_Pass</name>
        <label>Assign Daily Pass</label>
        <locationX>1898</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarQuantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.TotalPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PriceAndQuantity</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_New_Quote_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Hourly</name>
        <label>Assign Hourly</label>
        <locationX>1634</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.End_Date_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarEndDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.TotalPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>HourlyPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Entry_Date_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarEntryDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_New_Quote_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Hourly_Pass</name>
        <label>Assign Hourly Pass</label>
        <locationX>2162</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarQuantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.TotalPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PriceAndQuantity</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_New_Quote_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Monthly</name>
        <label>Assign Monthly</label>
        <locationX>578</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Acces_Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarAccessType</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Entry_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarEntryDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.TotalPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>DesksAndPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarDeskQuantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.UnitPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarPrice</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_New_Quote_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_One_Time</name>
        <label>Assign One-Time</label>
        <locationX>1106</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Entry_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarEntryDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarQuantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.TotalPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PriceAndQuantity</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_New_Quote_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Periodic</name>
        <label>Assign Periodic</label>
        <locationX>842</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Entry_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarEntryDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.End_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarEndDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.TotalPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PeriodicTotalPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarDeskQuantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.UnitPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarPrice</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_New_Quote_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Product_Var</name>
        <label>Assign Product Var</label>
        <locationX>1590</locationX>
        <locationY>242</locationY>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Acces_Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarAccessType</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarNotes</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.PricebookEntryId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarProductEntryId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Product2Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarProductId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.QuoteId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarQuoteId.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarQuoteProduct.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Access_Type</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Removal_Error_Message</name>
        <label>Assign Removal Error Message</label>
        <locationX>314</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>VarErrorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RemoveErrorMessageTemplate</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Change_count</name>
        <label>Count Opportunity Products and assign Timestamp &amp; clear error Message</label>
        <locationX>820</locationX>
        <locationY>1190</locationY>
        <assignmentItems>
            <assignToReference>VarQuoteProductCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Count_Quote_Products</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>LastAddedDateTime</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarLastDeletedDateTime</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarErrorMessage</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Clear_Removal_Error_Message</name>
        <label>Clear Removal Error Message</label>
        <locationX>50</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>VarErrorMessage</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>Count_Quote_Products</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Access_Type</name>
        <label>Access Type</label>
        <locationX>1590</locationX>
        <locationY>350</locationY>
        <defaultConnector>
            <targetReference>Add_New_Quote_Product</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Monthly</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Monthly</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Monthly</targetReference>
            </connector>
            <label>Monthly</label>
        </rules>
        <rules>
            <name>Periodic</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Periodic</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Periodic</targetReference>
            </connector>
            <label>Periodic</label>
        </rules>
        <rules>
            <name>One_Time</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>One-Time</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_One_Time</targetReference>
            </connector>
            <label>One-Time</label>
        </rules>
        <rules>
            <name>Daily</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Daily</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Daily</targetReference>
            </connector>
            <label>Daily</label>
        </rules>
        <rules>
            <name>Hourly</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Hourly</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Hourly</targetReference>
            </connector>
            <label>Hourly</label>
        </rules>
        <rules>
            <name>Daily_Pass</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Daily-Pass</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Daily_Pass</targetReference>
            </connector>
            <label>Daily-Pass</label>
        </rules>
        <rules>
            <name>Hourly_Pass</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Hourly-Pass</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Hourly_Pass</targetReference>
            </connector>
            <label>Hourly-Pass</label>
        </rules>
        <rules>
            <name>Series</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Series</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_New_Quote_Product</targetReference>
            </connector>
            <label>Series</label>
        </rules>
    </decisions>
    <decisions>
        <name>Add_or_Remove</name>
        <label>Add or Remove</label>
        <locationX>820</locationX>
        <locationY>134</locationY>
        <defaultConnector>
            <targetReference>Assign_Product_Var</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Add Opportunity Products</defaultConnectorLabel>
        <rules>
            <name>Remove_Opportunity_Product</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarQuoteProductRemoval</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_Quote_Products</targetReference>
            </connector>
            <label>Remove Opportunity Product</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>CalculatedTotalPrice</name>
        <dataType>Currency</dataType>
        <expression>IF(
    {!VarAccessType} = &quot;Monthly&quot;,
    {!VarDeskQuantity} * 2 * {!VarPrice},
    
    IF(
        {!VarAccessType} = &quot;Periodic&quot;,
        (
            (
                (YEAR({!VarEndDate}) - YEAR({!VarEntryDate})) * 12 +
                (MONTH({!VarEndDate}) - MONTH({!VarEntryDate}))
            ) * {!VarDeskQuantity} * {!VarPrice} +
            (
                (DAY({!VarEndDate}) - DAY({!VarEntryDate})) / 
                CASE(
                    MONTH({!VarEntryDate}),
                    1, 31,
                    2, IF(MOD(YEAR({!VarEntryDate}), 4) = 0, 29, 28),
                    3, 31,
                    4, 30,
                    5, 31,
                    6, 30,
                    7, 31,
                    8, 31,
                    9, 30,
                    10, 31,
                    11, 30,
                    12, 31,
                    0
                )
            ) * {!VarDeskQuantity} * {!VarPrice}
        ),

        IF(
            {!VarAccessType} = &quot;Hourly&quot;,
            CEILING(
                ( {!VarEndDateTime} - {!VarEntryDateTime}) * 24
            ) * {!VarPrice},

            IF(
                {!VarAccessType} = &quot;Daily&quot;,
                {!VarPrice},

                IF(
                    {!VarAccessType} = &quot;Daily-Pass&quot;,
                    {!VarQuantity} * {!VarPrice},

                    IF(
                        {!VarAccessType} = &quot;Hourly-Pass&quot;,
                        {!VarQuantity} * {!VarPrice},

                        IF(
                            {!VarAccessType} = &quot;One-Time&quot;,
                            {!VarQuantity} * {!VarPrice},

                            0
                        )
                    )
                )
            )
        )
    )
)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>DesksAndPrice</name>
        <dataType>Currency</dataType>
        <expression>{!VarPrice} * {!VarDeskQuantity}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>HourlyPrice</name>
        <dataType>Currency</dataType>
        <expression>CEILING(( {!VarEndDateTime} - {!VarEntryDateTime}) * 24) * {!VarPrice}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>PeriodicTotalPrice</name>
        <dataType>Currency</dataType>
        <expression>(
    (
        ((YEAR({!VarEndDate}) - YEAR({!VarEntryDate})) * 12 + (MONTH({!VarEndDate}) - MONTH({!VarEntryDate}))) * 
        {!VarDeskQuantity} * {!VarPrice}
    ) + 
    (
        ((DAY({!VarEndDate}) - DAY({!VarEntryDate})) / CASE(
            MONTH({!VarEntryDate}),
            1, 31,
            2, IF(MOD(YEAR({!VarEntryDate}), 4) = 0, 29, 28),
            3, 31,
            4, 30,
            5, 31,
            6, 30,
            7, 31,
            8, 31,
            9, 30,
            10, 31,
            11, 30,
            12, 31,
            0
        )) * {!VarDeskQuantity} * {!VarPrice}
    )
)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>PriceAndQuantity</name>
        <dataType>Currency</dataType>
        <expression>{!VarPrice} * {!VarQuantity}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>QueryForVar</name>
        <dataType>String</dataType>
        <expression>&quot;SELECT Id, Product_Name__c	, Acces_Type__c, End_date__c, Entry_Date__c , Quantity , TotalPrice  FROM QuoteLineItem where QuoteId = &apos;&quot; &amp; {!VarQuoteId.Id} &amp;&quot;&apos; LIMIT &quot; &amp; TEXT({!VarQuoteProductCount})</expression>
    </formulas>
    <interviewLabel>Quote Package Builder - Add/Remove Quote Products {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Quote Package Builder - Add/Remove Quote Products</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Add_New_Quote_Product</name>
        <label>Add New Quote Product</label>
        <locationX>1590</locationX>
        <locationY>650</locationY>
        <connector>
            <targetReference>Count_Quote_Products</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Assign_Create_Error_Message</targetReference>
        </faultConnector>
        <inputReference>VarQuoteProduct</inputReference>
    </recordCreates>
    <recordDeletes>
        <name>Delete_Quote_Products</name>
        <label>Delete Quote Products</label>
        <locationX>50</locationX>
        <locationY>242</locationY>
        <connector>
            <targetReference>Clear_Removal_Error_Message</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Assign_Removal_Error_Message</targetReference>
        </faultConnector>
        <inputReference>VarQuoteProductRemoval</inputReference>
    </recordDeletes>
    <recordLookups>
        <name>Count_Quote_Products</name>
        <label>Count Quote Products</label>
        <locationX>820</locationX>
        <locationY>1082</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Change_count</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>QuoteId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarQuoteId.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>QuoteLineItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>DefaultMode</runInMode>
    <start>
        <locationX>694</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Add_or_Remove</targetReference>
        </connector>
    </start>
    <status>Obsolete</status>
    <textTemplates>
        <name>CerateErrorMessageTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;There is an issue adding the producs. Please contact your admin &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>RemoveErrorMessageTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;There is an issue with removing the products. Please contact your admin &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>currentItemFromSourceCollection</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityLineItem</objectType>
    </variables>
    <variables>
        <name>LastAddedDateTime</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>ProductVar</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityLineItem</objectType>
    </variables>
    <variables>
        <name>QueryForFetcher</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <elementReference>QueryForVar</elementReference>
        </value>
    </variables>
    <variables>
        <name>VarAccessType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarDeskQuantity</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>VarEndDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarEndDateTime</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarEntryDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarEntryDateTime</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarErrorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>VarLastDeletedDateTime</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>VarNotes</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarOpportunityProductRemoval</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityLineItem</objectType>
    </variables>
    <variables>
        <name>VarOpporutnityId</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <name>VarPrice</name>
        <dataType>Currency</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>VarProductEntryId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarProductId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarQuantity</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>VarQuoteId</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Quote</objectType>
    </variables>
    <variables>
        <name>VarQuoteProduct</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>QuoteLineItem</objectType>
    </variables>
    <variables>
        <name>VarQuoteProductCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>VarQuoteProductRemoval</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>QuoteLineItem</objectType>
    </variables>
    <variables>
        <name>VarQuoteRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Quote</objectType>
    </variables>
</Flow>
