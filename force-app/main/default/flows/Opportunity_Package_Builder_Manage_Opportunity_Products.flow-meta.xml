<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>60.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Assign_Daily</name>
        <label>Assign Daily</label>
        <locationX>1370</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>ProductVar.Entry_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarEntryDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.UnitPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarPrice</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_New_Opportunity_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Daily_Pass</name>
        <label>Assign Daily Pass</label>
        <locationX>1898</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>ProductVar.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarQuantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.UnitPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Entry_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarOpporutnityId.CloseDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.End_date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CloseDatePlusoneYear</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_New_Opportunity_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Hourly</name>
        <label>Assign Hourly</label>
        <locationX>1634</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>ProductVar.End_Date_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarEndDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.UnitPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Entry_Date_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarEntryDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>HourlyQuantityCal</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Entry_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>DateTimeToDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_New_Opportunity_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Hourly_Pass</name>
        <label>Assign Hourly Pass</label>
        <locationX>2162</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>ProductVar.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarQuantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.UnitPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Entry_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarOpporutnityId.CloseDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.End_date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CloseDatePlusoneYear</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_New_Opportunity_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Monthly</name>
        <label>Assign Monthly</label>
        <locationX>578</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>ProductVar.Entry_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarEntryDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.TotalPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Temporary__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarTemporary</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>MonthlyQuantityCal</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Desk_Count__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarDeskQuantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Include_In_Deposit_Calculations__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>DepositCalculationsCheck</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_New_Opportunity_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_One_Time</name>
        <label>Assign One-Time</label>
        <locationX>1106</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>ProductVar.Entry_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarEntryDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarQuantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.UnitPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarPrice</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_New_Opportunity_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Periodic</name>
        <label>Assign Periodic</label>
        <locationX>842</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>ProductVar.Entry_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarEntryDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.End_date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>EndDateCal</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.TotalPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Temporary__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarTemporary</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PeriodicQuantityCal</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Desk_Count__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarDeskQuantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Include_In_Deposit_Calculations__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>DepositCalculationsCheck</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_New_Opportunity_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Product_Creation_Error</name>
        <label>Assign Product Creation Error</label>
        <locationX>2602</locationX>
        <locationY>866</locationY>
        <assignmentItems>
            <assignToReference>AddErrorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AddindFaultErrorMessage</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_Product_Var</name>
        <label>Assign Product Var</label>
        <locationX>1502</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>ProductVar.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarNotes</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.OpportunityId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarOpporutnityId.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.PricebookEntryId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarProductEntryId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Product2Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarProductId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Product__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarProductId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Access_Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarAccessType</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Product_Sub_Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Pricebook_Entry.Product2.Sub_Type__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProductVar.Products_Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Pricebook_Entry.Product2.Type__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Access_Type</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Remove_error_message</name>
        <label>Assign Remove error message</label>
        <locationX>314</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>RemoveErrorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RemoveErrorMEssageFault</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Error_Assign</name>
        <label>Error Assign</label>
        <locationX>776</locationX>
        <locationY>1190</locationY>
        <assignmentItems>
            <assignToReference>AddErrorMessage</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RemoveErrorMessage</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
    </assignments>
    <decisions>
        <name>Access_Type</name>
        <label>Access Type</label>
        <locationX>1502</locationX>
        <locationY>458</locationY>
        <defaultConnector>
            <targetReference>Add_New_Opportunity_Product</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Monthly</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Monthly</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Monthly</targetReference>
            </connector>
            <label>Monthly</label>
        </rules>
        <rules>
            <name>Periodic</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Periodic</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Periodic</targetReference>
            </connector>
            <label>Periodic</label>
        </rules>
        <rules>
            <name>One_Time</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>One-Time</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_One_Time</targetReference>
            </connector>
            <label>One-Time</label>
        </rules>
        <rules>
            <name>Daily</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Daily</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Daily</targetReference>
            </connector>
            <label>Daily</label>
        </rules>
        <rules>
            <name>Hourly</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Hourly</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Hourly</targetReference>
            </connector>
            <label>Hourly</label>
        </rules>
        <rules>
            <name>Daily_Pass</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Daily Multi-Pass</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Daily_Pass</targetReference>
            </connector>
            <label>Daily-Pass</label>
        </rules>
        <rules>
            <name>Hourly_Pass</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccessType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Hourly Multi-Pass</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Hourly_Pass</targetReference>
            </connector>
            <label>Hourly-Pass</label>
        </rules>
    </decisions>
    <decisions>
        <name>Add_or_Remove</name>
        <label>Add or Remove</label>
        <locationX>776</locationX>
        <locationY>134</locationY>
        <defaultConnector>
            <targetReference>Get_Pricebook_Entry</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Add Opportunity Products</defaultConnectorLabel>
        <rules>
            <name>Remove_Opportunity_Product</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>InputVarRemoveProductRecord</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_Opportunity_Products</targetReference>
            </connector>
            <label>Remove Opportunity Product</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>CloseDatePlusoneYear</name>
        <dataType>Date</dataType>
        <expression>{!VarOpporutnityId.CloseDate}+360</expression>
    </formulas>
    <formulas>
        <name>DateTimeToDate</name>
        <dataType>Date</dataType>
        <expression>DATEVALUE({!VarEntryDateTime})</expression>
    </formulas>
    <formulas>
        <name>DepositCalculationsCheck</name>
        <dataType>Boolean</dataType>
        <expression>ISPICKVAL({!Get_Pricebook_Entry.Product2.Type__c}, &quot;Standard Products&quot;)</expression>
    </formulas>
    <formulas>
        <description>For periodic and monthly access type</description>
        <name>DesksAndPriceCal</name>
        <dataType>Currency</dataType>
        <expression>IF( ISPICKVAL({!ProductVar.Product2.Type__c}, &apos;Standard Products&apos;) ,{!VarDeskQuantity}, 1)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>EndDateCal</name>
        <dataType>Date</dataType>
        <expression>DATE(
    YEAR({!VarEndDate}),
    MONTH({!VarEndDate}),
    CASE(
        MONTH({!VarEndDate}),
        1, 31,
        2, IF(MOD(YEAR({!VarEndDate}), 4) = 0, 29, 28),
        3, 31,
        4, 30,
        5, 31,
        6, 30,
        7, 31,
        8, 31,
        9, 30,
        10, 31,
        11, 30,
        12, 31,
        0
    )
)</expression>
    </formulas>
    <formulas>
        <name>HourlyQuantityCal</name>
        <dataType>Currency</dataType>
        <expression>ROUND(( {!VarEndDateTime} - {!VarEntryDateTime}) * 24,2)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>MonthlyQuantityCal</name>
        <dataType>Number</dataType>
        <expression>IF( ISPICKVAL({!ProductVar.Product2.Type__c}, &apos;Standard Products&apos;) , 
{!VarDeskQuantity} , {!VarQuantity} )</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <description>Desk * Period Cal</description>
        <name>PeriodicQuantityCal</name>
        <dataType>Number</dataType>
        <expression> IF( ISPICKVAL({!ProductVar.Product2.Type__c}, &apos;Standard Products&apos;) , 
{!VarDeskQuantity} , {!VarQuantity} )</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>PeriodMonthesCal</name>
        <dataType>Currency</dataType>
        <expression>(
    (YEAR({!VarEndDate}) - YEAR({!VarEntryDate})) * 12 + (MONTH({!VarEndDate}) - MONTH({!VarEntryDate}))
) + 
(
    (CASE(
        MONTH({!VarEntryDate}),
        1, 31,
        2, IF(MOD(YEAR({!VarEntryDate}), 4) = 0, 29, 28),
        3, 31,
        4, 30,
        5, 31,
        6, 30,
        7, 31,
        8, 31,
        9, 30,
        10, 31,
        11, 30,
        12, 31,
        0
    ) - DAY({!VarEntryDate}) + 1
    ) / CASE(
        MONTH({!VarEntryDate}),
        1, 31,
        2, IF(MOD(YEAR({!VarEntryDate}), 4) = 0, 29, 28),
        3, 31,
        4, 30,
        5, 31,
        6, 30,
        7, 31,
        8, 31,
        9, 30,
        10, 31,
        11, 30,
        12, 31,
        0
    )
)</expression>
        <scale>4</scale>
    </formulas>
    <interviewLabel>opportunity Package Builder - Add/Remove Opportunity Products debug {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Opportunity Package Builder - Manage Opportunity Products</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Add_New_Opportunity_Product</name>
        <label>Add New Opportunity Product</label>
        <locationX>1502</locationX>
        <locationY>758</locationY>
        <connector>
            <targetReference>Error_Assign</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Assign_Product_Creation_Error</targetReference>
        </faultConnector>
        <inputReference>ProductVar</inputReference>
    </recordCreates>
    <recordDeletes>
        <name>Delete_Opportunity_Products</name>
        <label>Delete Opportunity Products</label>
        <locationX>50</locationX>
        <locationY>242</locationY>
        <connector>
            <targetReference>Error_Assign</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Assign_Remove_error_message</targetReference>
        </faultConnector>
        <inputReference>InputVarRemoveProductRecord</inputReference>
    </recordDeletes>
    <recordLookups>
        <name>Get_Pricebook_Entry</name>
        <label>Get Pricebook Entry</label>
        <locationX>1502</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Product_Var</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarProductEntryId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PricebookEntry</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>SystemModeWithSharing</runInMode>
    <start>
        <locationX>650</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Add_or_Remove</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>AddindFaultErrorMessage</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;There was an issue adding the product to the package. Please Contact Your Admin&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>RemoveErrorMEssageFault</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;There was an issue removing the product. Please contact your admin. {!$Flow.FaultMessage}&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>AddErrorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>InputVarRemoveProductRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityLineItem</objectType>
    </variables>
    <variables>
        <name>ProductVar</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityLineItem</objectType>
    </variables>
    <variables>
        <name>RemoveErrorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>VarAccessType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarDeskQuantity</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>VarEndDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarEndDateTime</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarEntryDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarEntryDateTime</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarNotes</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarOpporutnityId</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <name>VarPrice</name>
        <dataType>Currency</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>VarProductEntryId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarProductId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarQuantity</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>VarTemporary</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
